[package]
name = "common"
version = "0.1.0"
authors = ["Convex, Inc. <no-reply@convex.dev>"]
edition = "2021"
license = "LicenseRef-FSL-1.1-Apache-2.0"

[package.metadata.cargo-udeps.ignore]
normal = ["proptest", "proptest-derive"]
development = ["proptest", "proptest-derive"]

[lib]
doctest = false

[features]
tracy-tracing = ["tracy-client", "tracy-client/enable"]
testing = [
    "errors/testing",
    "metrics/testing",
    "packed_value/testing",
    "proptest",
    "proptest-derive",
    "proptest-http",
    "rand_chacha",
    "sync_types/testing",
    "shape_inference/testing",
    "value/testing",
    "tokio/test-util",
]

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
axum = { workspace = true }
axum-extra = { workspace = true }
biscuit = { workspace = true }
bitvec = { workspace = true }
byteorder = { workspace = true }
bytes = { workspace = true }
cmd_util = { workspace = true }
compact_str = { workspace = true }
crossbeam-channel = { workspace = true }
csf = { workspace = true }
cstr = { workspace = true }
derive_more = { workspace = true }
enum-iterator = { workspace = true }
errors = { workspace = true }
event-listener = { workspace = true }
fastrace = { workspace = true }
flate2 = { workspace = true }                                                 # enable the zlib-ng feature
float_next_after = { workspace = true }
fnv = { workspace = true }
futures = { workspace = true }
futures-async-stream = { workspace = true }
futures-util = { workspace = true }
governor = { workspace = true }
headers = { workspace = true }
hex = { workspace = true }
http = { workspace = true }
http-body-util = { workspace = true }
hyper = { workspace = true }
hyper-util = { workspace = true }
imbl = { workspace = true }
itertools = { workspace = true }
json_trait = { workspace = true }
maplit = { workspace = true }
metrics = { workspace = true }
mime = { workspace = true }
openidconnect = { workspace = true }
packed_value = { workspace = true }
parking_lot = { workspace = true }
pb = { workspace = true }
pb_extras = { workspace = true }
pin-project = { workspace = true }
prometheus = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
proptest-http = { workspace = true, optional = true }
prost-types = { workspace = true }
rand = { workspace = true }
rand_chacha = { workspace = true, optional = true }
regex = { workspace = true }
reqwest = { workspace = true }
semver = { workspace = true }
sentry = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
sha2 = { workspace = true }
shape_inference = { workspace = true }
sourcemap = { workspace = true }
strum = { workspace = true }
sync_types = { workspace = true }
thiserror = { workspace = true }
tld = { workspace = true }
tokio = { workspace = true }
tokio-metrics = { workspace = true }
tokio-metrics-collector = { workspace = true }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }
tonic = { workspace = true }
tonic-health = { workspace = true }
tonic-middleware = { workspace = true }
tower = { workspace = true }
tower-cookies = { workspace = true }
tower-http = { workspace = true }
tracing = { workspace = true }
tracy-client = { workspace = true, optional = true }
# This dependency *must* match tungstenite from axum -> tokio-tungstenite -> tungstenite for error downcasting to work.
tungstenite = { workspace = true }
tuple_struct = { workspace = true }
url = { workspace = true }
utoipa = { workspace = true }
uuid = { workspace = true }
value = { workspace = true }

[dev-dependencies]
errors = { workspace = true, features = ["testing"] }
jsonschema = { workspace = true }
metrics = { workspace = true, features = ["testing"] }
must-let = { workspace = true }
packed_value = { workspace = true, features = ["testing"] }
proptest = { workspace = true }
proptest-derive = { workspace = true }
proptest-http = { workspace = true }
rand_chacha = { workspace = true }
shape_inference = { workspace = true, features = ["testing"] }
sync_types = { workspace = true, features = [
    "testing",
] }
tokio = { workspace = true, features = ["test-util"] }
value = { workspace = true, features = ["testing"] }

[lints]
workspace = true
